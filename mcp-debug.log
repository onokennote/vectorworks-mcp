'Bridge...' は、内部コマンドまたは外部コマンド、
操作可能なプログラムまたはバッチ ファイルとして認識されていません。
[MCP Bridge] Connected to Vectorworks MCP server
[MCP Bridge] Sending WebSocket request: {"jsonrpc":"2.0","id":4,"method":"vw.search","params":{"k":2,"query":"object type"}}
[MCP Bridge] Received WebSocket message: {"jsonrpc": "2.0", "id": 4, "result": [{"score": 0.4889044761657715, "doc_id": "vw-dev-scripting/Function Reference/Functions/ObjectType.md", "chunk_id": 0, "text": "# ObjectType\n\n## Description\nReturns the type identifier an object. If more than one object matches the search criteria, the type identifier of the last matching object will be returned.\n\n```pascal\nFUNCTION ObjectType(c : CRITERIA): INTEGER;\n```\n\n```python\ndef vs.ObjectType(c):\n    return INTEGER\n```\n\n## Parameters\n|Name|Type|Description|\n|---|---|---|\n|c|CRITERIA|Search criteria.|\n\n## Examples\nVectorScript:\n```pascal\nTypeValue:=ObjectType(N='Mystery Object');\n{returns the type of the object named 'Mystery Object'}\n```\nPython:\n```python\nTypeValue = vs.ObjectType( \"N='Mystery Object'\" );\n# returns the type of the object named 'Mystery Object'\n```\n\n## Version\nAvailability: from All Versions\n\n## Category\n* [Criteria](../Categories/Criteria.md)"}, {"score": 0.4750043749809265, "doc_id": "vw-dev-scripting/Function Reference/Appendix/pages/Appendix D - Vectorworks Object Types and Subtypes.md", "chunk_id": 0, "text": "# Appendix D - Vectorworks Object Types and Subtypes\n\nThe numeric types in the table below are useful for identifying what type of object is referenced by a handle. The function [VS:GetTypeN](h) will return one of these numeric types. The Criteria values in the table below are used in search criteria statements. They are used along with the criteria *T=* to search for objects of a specific type. For example, the following statement will count the number of rectangles in the active document:\n\n```python\nMessage( Count(T=RECT) );\n```\n\n## Object Types\n\n| Object | Type | Criteria |\n|--------|------|----------|\n| Line | 2 | LINE |\n| Rectangle | 3 | RECT |\n| Oval | 4 | OVAL |\n| Polygon | 5 | POLY |\n| Arc | 6 | ARC |\n| Freehand | 8 | FHAND |\n| 3D Locus | 9 | LOCUS3D |\n| Text | 10 | TEXT |\n| Group | 11 | GROUP |\n| Rounded rectangle | 13 | RRECT |\n| Bitmap Image | 14 | BITMAP |\n| Symbol instance | 15 | SYMBOL |\n| Symbol Definition (1) | 16 |  |\n| 2D Locus | 17 | LOCUS |\n| Worksheet (1) | 18 | SPRDSHEET |\n| Material definition (1) | 19 | MATERIAL |\n| Polyline | 21 | POLYLINE |\n| PICT Image | 22 | PICT |\n| Extrude | 24 | XTRD |\n| 3D Polygon | 25 | POLY3D |\n| Layer Link | 29 | LAYERLINK |\n| Layer | 31 |  |\n| Sweep | 34 | SWEEP |\n| Multiple extrude | 38 | MXTRD |\n| Mesh | 40 | MESH |\n| Mesh vertex | 41 |  |\n| Record Definition (Format) | 47 |  |\n| Record | 48 |  |\n| Document script (1) | 49 |  |\n| Script palette (1) | 51 |  |\n| Worksheet Data (on drawing) | 56 |  |\n| Dimension | 63 | DIMENSION |\n| Hatch Fill definition (1) | 66 |  |\n| Wall | 68 | WALL |\n| Column, Floor, Roof Face | 71 | SLAB |\n| Light | 81 | LIGHT |\n| Roof edge | 82 |  |\n| Roof object | 83 | ROOF |\n| CSG Solid (Addition, Subtraction) | 84 | CSGSOLID |\n| Plug-in object | 86 | PLUGINOBJECT |\n| Roof element | 87 | ROOFELEMENT |\n| Symbol folder (1) | 92 |  |\n| Texture Bitmap (1) | 93 |  |\n| Class Definition (1) | 94 |  |\n| Solid (Cone, Sphere, ...) | 95 | SOLID |\n| Line Type definition (1) | 96 |  |\n| Texture definition (1) | 97 |  |\n| Roof Style definition (1) | 102 |  |\n| Slab Style definition (1) | 107 |  |\n| Tile Fill definition (1) | 108 |  |\n| Text Style definition (1) | 109 |  |\n| NURBS Curve | 111 | NURBSCURVE |\n| NURBS Surface | 113 | NURBSSURFACE |\n| Renderworks Background (1) | 115 |  |\n| Image Fill definition (1) | 119 |  |\n| Gradient Fill definition (1) | 120 |  |\n| Fill Space (1) | 121 |  |\n| Viewport | 122 | VIEWPORT |\n| Wall Style definition (1) | 127 |  |\n\n**Notes:**\n1. These special objects are not directly displayed in the document. They may contain definition information used by other objects or features.\n\n## Object Subtypes"}]}
{"jsonrpc": "2.0", "id": 4, "result": [{"score": 0.4889044761657715, "doc_id": "vw-dev-scripting/Function Reference/Functions/ObjectType.md", "chunk_id": 0, "text": "# ObjectType\n\n## Description\nReturns the type identifier an object. If more than one object matches the search criteria, the type identifier of the last matching object will be returned.\n\n```pascal\nFUNCTION ObjectType(c : CRITERIA): INTEGER;\n```\n\n```python\ndef vs.ObjectType(c):\n    return INTEGER\n```\n\n## Parameters\n|Name|Type|Description|\n|---|---|---|\n|c|CRITERIA|Search criteria.|\n\n## Examples\nVectorScript:\n```pascal\nTypeValue:=ObjectType(N='Mystery Object');\n{returns the type of the object named 'Mystery Object'}\n```\nPython:\n```python\nTypeValue = vs.ObjectType( \"N='Mystery Object'\" );\n# returns the type of the object named 'Mystery Object'\n```\n\n## Version\nAvailability: from All Versions\n\n## Category\n* [Criteria](../Categories/Criteria.md)"}, {"score": 0.4750043749809265, "doc_id": "vw-dev-scripting/Function Reference/Appendix/pages/Appendix D - Vectorworks Object Types and Subtypes.md", "chunk_id": 0, "text": "# Appendix D - Vectorworks Object Types and Subtypes\n\nThe numeric types in the table below are useful for identifying what type of object is referenced by a handle. The function [VS:GetTypeN](h) will return one of these numeric types. The Criteria values in the table below are used in search criteria statements. They are used along with the criteria *T=* to search for objects of a specific type. For example, the following statement will count the number of rectangles in the active document:\n\n```python\nMessage( Count(T=RECT) );\n```\n\n## Object Types\n\n| Object | Type | Criteria |\n|--------|------|----------|\n| Line | 2 | LINE |\n| Rectangle | 3 | RECT |\n| Oval | 4 | OVAL |\n| Polygon | 5 | POLY |\n| Arc | 6 | ARC |\n| Freehand | 8 | FHAND |\n| 3D Locus | 9 | LOCUS3D |\n| Text | 10 | TEXT |\n| Group | 11 | GROUP |\n| Rounded rectangle | 13 | RRECT |\n| Bitmap Image | 14 | BITMAP |\n| Symbol instance | 15 | SYMBOL |\n| Symbol Definition (1) | 16 |  |\n| 2D Locus | 17 | LOCUS |\n| Worksheet (1) | 18 | SPRDSHEET |\n| Material definition (1) | 19 | MATERIAL |\n| Polyline | 21 | POLYLINE |\n| PICT Image | 22 | PICT |\n| Extrude | 24 | XTRD |\n| 3D Polygon | 25 | POLY3D |\n| Layer Link | 29 | LAYERLINK |\n| Layer | 31 |  |\n| Sweep | 34 | SWEEP |\n| Multiple extrude | 38 | MXTRD |\n| Mesh | 40 | MESH |\n| Mesh vertex | 41 |  |\n| Record Definition (Format) | 47 |  |\n| Record | 48 |  |\n| Document script (1) | 49 |  |\n| Script palette (1) | 51 |  |\n| Worksheet Data (on drawing) | 56 |  |\n| Dimension | 63 | DIMENSION |\n| Hatch Fill definition (1) | 66 |  |\n| Wall | 68 | WALL |\n| Column, Floor, Roof Face | 71 | SLAB |\n| Light | 81 | LIGHT |\n| Roof edge | 82 |  |\n| Roof object | 83 | ROOF |\n| CSG Solid (Addition, Subtraction) | 84 | CSGSOLID |\n| Plug-in object | 86 | PLUGINOBJECT |\n| Roof element | 87 | ROOFELEMENT |\n| Symbol folder (1) | 92 |  |\n| Texture Bitmap (1) | 93 |  |\n| Class Definition (1) | 94 |  |\n| Solid (Cone, Sphere, ...) | 95 | SOLID |\n| Line Type definition (1) | 96 |  |\n| Texture definition (1) | 97 |  |\n| Roof Style definition (1) | 102 |  |\n| Slab Style definition (1) | 107 |  |\n| Tile Fill definition (1) | 108 |  |\n| Text Style definition (1) | 109 |  |\n| NURBS Curve | 111 | NURBSCURVE |\n| NURBS Surface | 113 | NURBSSURFACE |\n| Renderworks Background (1) | 115 |  |\n| Image Fill definition (1) | 119 |  |\n| Gradient Fill definition (1) | 120 |  |\n| Fill Space (1) | 121 |  |\n| Viewport | 122 | VIEWPORT |\n| Wall Style definition (1) | 127 |  |\n\n**Notes:**\n1. These special objects are not directly displayed in the document. They may contain definition information used by other objects or features.\n\n## Object Subtypes"}]}
